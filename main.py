from fastapi import FastAPI, Depends, HTTPException, status
from fastapi.security import HTTPBasic, HTTPBasicCredentials
import httpx
from typing import Optional

app = FastAPI()
security = HTTPBasic()

PASSWORD = "dfjgidf5346sggwefrk###gjgkidfjkd"

def authenticate(credentials: HTTPBasicCredentials = Depends(security)):
    if credentials.password != PASSWORD:
        raise HTTPException(
            status_code=status.HTTP_401_UNAUTHORIZED,
            detail="–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å",
            headers={"WWW-Authenticate": "Basic"},
        )
    return True

@app.get("/calculate")
async def calculate_price(
    item_name: str,
    item_price_usd: float,
    savings_uah: float,
    authenticated: bool = Depends(authenticate)
):

    async with httpx.AsyncClient() as client:
        response = await client.get("https://api.monobank.ua/bank/currency")
        if response.status_code != 200:
            raise HTTPException(status_code=500, detail="–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—É –≤–∞–ª—é—Ç –∑ Monobank")
        rates = response.json()

    usd_uah_rate = None
    for rate in rates:
        if rate["currencyCodeA"] == 840 and rate["currencyCodeB"] == 980:
            usd_uah_rate = rate["rateSell"]
            break

    if not usd_uah_rate:
        raise HTTPException(status_code=500, detail="–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫—É—Ä—Å –¥–æ–ª–∞—Ä–∞ –¥–æ –≥—Ä–∏–≤–Ω—ñ")

    savings_usd = savings_uah / usd_uah_rate
    diff = item_price_usd - savings_usd

    if diff <= 0:
        message = f"–í—ñ—Ç–∞—î–º–æ! –í–∏ –≤–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ '{item_name}' ü•≥"
    elif diff < 100:
        message = f"–©–µ —Ç—Ä—ñ—à–∫–∏ –ø–æ–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ ‚Äî —ñ '{item_name}' –±—É–¥–µ –≤–∞—à–∏–º!"
    elif diff < 1000:
        message = f"–ü—Ä–∞—Ü—é–≤–∞—Ç–∏ —â–µ –±–∞–≥–∞—Ç–µ–Ω—å–∫–æ, –∞–ª–µ –Ω–µ —Å–ª—ñ–¥ –∑–∞—Å–º—É—á—É–≤–∞—Ç–∏—Å—å ‚Äî '{item_name}' –Ω—ñ–∫—É–¥–∏ –Ω–µ –≤—Ç–µ—á–µ!"
    else:
        message = f"–¢—Ä–µ–±–∞ —à—É–∫–∞—Ç–∏ –Ω–æ–≤—É —Ä–æ–±–æ—Ç—É üòÖ –î–æ '{item_name}' —â–µ –¥–∞–ª–µ–∫–æ..."

    return {
        "–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É": item_name,
        "–ö—É—Ä—Å USD": round(usd_uah_rate, 2),
        "–í–∞—à—ñ –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –≤ –¥–æ–ª–∞—Ä–∞—Ö": round(savings_usd, 2),
        "–¶—ñ–Ω–∞ —Ç–æ–≤–∞—Ä—É –≤ –¥–æ–ª–∞—Ä–∞—Ö": item_price_usd,
        "–°–∫—ñ–ª—å–∫–∏ —â–µ —Ç—Ä–µ–±–∞ –Ω–∞–∫–æ–ø–∏—á–∏—Ç–∏": round(max(diff, 0), 2),
        "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è": message
    }

